{"version":3,"sources":["Components/Cast/castItems.module.css","Components/Cast/CastItem.js","Components/Cast/Cast.js"],"names":["module","exports","CastItem","cast","className","st","cast_list","map","item","key","id","src","ImageSrc","profile_path","alt","name","width","height","character","Cast","state","movieId","this","props","match","params","API","then","response","setState","data","Component"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,+B,oKCwBfC,EArBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,oCACE,wBAAIC,UAAWC,IAAGC,WACfH,EAAKI,KAAI,SAACC,GAAD,OACR,wBAAIC,IAAKD,EAAKE,IACZ,yBACEC,IAAKC,YAASJ,EAAKK,cACnBC,IAAKN,EAAKO,KACVC,MAAM,MACNC,OAAO,QAET,2BAAIT,EAAKO,MACT,2BAAIP,EAAKU,kBCXAC,E,4MACnBC,MAAQ,CACNjB,KAAM,I,kEAGa,IAAD,OAEVkB,EADUC,KAAKC,MAAfC,MACkBC,OAAlBJ,QAERK,IAASL,GAASM,MAAK,SAACC,GACtB,EAAKC,SAAS,CAAE1B,KAAMyB,EAASE,KAAK3B,Y,+BAI9B,IACAA,EAASmB,KAAKF,MAAdjB,KACR,OAAO,kBAAC,EAAD,CAAUA,KAAMA,Q,GAhBO4B","file":"static/js/Cast.2b1963f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast_list\":\"castItems_cast_list__1BJmK\"};","import React from \"react\";\r\nimport ImageSrc from \"../../helpers\";\r\nimport st from \"./castItems.module.css\"\r\n\r\nconst CastItem = ({ cast }) => {\r\n  return (\r\n    <>\r\n      <ul className={st.cast_list}>\r\n        {cast.map((item) => (\r\n          <li key={item.id} >\r\n            <img\r\n              src={ImageSrc(item.profile_path)}\r\n              alt={item.name}\r\n              width=\"120\"\r\n              height=\"150\"\r\n            />\r\n            <p>{item.name}</p>\r\n            <p>{item.character}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastItem;\r\n","import React, { Component } from \"react\";\r\nimport * as API from \"../Api/services\";\r\nimport CastItem from \"./CastItem\";\r\n\r\n// информация о актерском составе\r\n\r\nexport default class Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n    const { movieId } = match.params;\r\n\r\n    API.Cast(movieId).then((response) => {\r\n      this.setState({ cast: response.data.cast });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n    return <CastItem cast={cast} />;\r\n  }\r\n}\r\n"],"sourceRoot":""}